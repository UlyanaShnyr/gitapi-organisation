{"version":3,"sources":["components/layout/Home.js","components/organisation/OrganisationCard.js","components/organisation/OrganisationList.js","components/organisation/Organisations.js","components/users/UserCard.js","components/users/UserList.js","components/users/Users.js","components/layout/Error.js","components/layout/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","Component","OrganisationCard","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleShow","bind","assertThisInitialized","handleClose","state","show","setState","className","onClick","name","alt","src","url","Modal","onHide","Header","closeButton","Title","Body","description","location","email","followers","href","members_url","Footer","Button","variant","OrganisationList","organisation","avatar_url","id","axios","get","res","data","_this2","Fragment","map","organisation_OrganisationCard","key","login","concat","Organisations","posts","companyname","public_repos","following","created_at","updated_at","fetch","then","response","json","console","log","e","preventDefault","getCompany","refs","value","company","width","ref","type","placeholder","handleSubmit","organisation_OrganisationList","UserCard","UserList","users","users_UserCard","Users","username","getUser","user","users_UserList","Error","Navigation","react_router_dom","to","App","layout_Navigation","react_router","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3f1f46ec.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Home\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nclass OrganisationCard extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n\r\n    this.state = {\r\n      show: false,\r\n    };\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-3\">\r\n        <div className=\"card\" onClick={this.handleShow}>\r\n          <p className=\"name\">{this.props.name}</p>\r\n          <div className=\"divImage\">\r\n            <img className=\"image_organisation\" alt=\"imageOrganisation\" src={this.props.url}></img>\r\n          </div>\r\n        </div>\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{this.props.name}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <img className=\"image_organisation\" alt=\"imageOrganisation\" src={this.props.url}></img>\r\n            <p>{this.props.description}</p>\r\n            <p>{this.props.location}</p>\r\n            <p>{this.props.email}</p>\r\n            <p>{this.props.followers}</p>\r\n            <a href={this.props.members_url}>Members</a>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default OrganisationCard;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport OrganisationCard from \"./OrganisationCard\";\r\n\r\nclass OrganisationList extends Component {\r\n    state = {\r\n        url: `https://api.github.com/organizations?page=1&per_page=140`,\r\n        organisation: [],\r\n        avatar_url: null,\r\n        id: null,       \r\n        description: null,\r\n        name: null,\r\n        location: null,\r\n        email: null,\r\n        followers: null,        \r\n        members_url: null\r\n\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get(this.state.url);\r\n        this.setState({\r\n            organisation: res.data\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.organisation ? (\r\n                    <div className=\"row\">\r\n                        {this.state.organisation.map(organisation => (\r\n                            <OrganisationCard\r\n                                key={organisation.id}\r\n                                name={organisation.login}\r\n                                url={organisation.avatar_url}\r\n                                description={organisation.description}\r\n                                location={organisation.location}\r\n                                email={this.props.email}\r\n                                followers={organisation.followers}\r\n                                members_url={` https://api.github.com/orgs/${organisation.login}/members`}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                        <h1>Loading ...</h1>\r\n                    )\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default OrganisationList;\r\n","import React, { Component } from \"react\";\r\nimport OrganisationList from \"./OrganisationList\";\r\n\r\nclass Organisations extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts: [],\r\n      companyname: null,\r\n      id: null,\r\n      url: null,\r\n      avatar_url: null,\r\n      description: null,\r\n      name: null,\r\n      location: null,\r\n      email: null,\r\n      public_repos: null,\r\n      followers: null,\r\n      following: null,\r\n      created_at: null,\r\n      updated_at: null\r\n    }\r\n  }\r\n\r\n  getCompany(companyname) {\r\n    return fetch(`https://api.github.com/orgs/${companyname}`)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        console.log(response);\r\n        return response;\r\n      })\r\n  }\r\n\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n    let company = await this.getCompany(this.refs.companyname.value);\r\n    this.setState({\r\n      companyname: company.login,\r\n      id: company.id,\r\n      url: company.url,\r\n      avatar_url: company.avatar_url,\r\n      name: company.name,\r\n      location: company.location,\r\n      email: company.email,\r\n      description: company.description,\r\n      followers: company.followers,\r\n      following: company.following,\r\n      created_at: company.created_at,\r\n      updated_at: company.updated_at\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let company;\r\n    if (this.state.companyname) {\r\n\r\n      company =\r\n        <div>\r\n          <img alt=\"avatar\" src={this.state.avatar_url} width='200px' />\r\n          <p>\r\n            {\"company: \" + this.state.name}<br />\r\n            {\"id: \" + this.state.id}<br />\r\n            {\"location: \" + this.state.location}<br />\r\n            {\"email: \" + this.state.email}<br />\r\n            {\"description: \" + this.state.description}<br />\r\n            {\"followers: \" + this.state.followers}<br />\r\n            {\"following: \" + this.state.following}<br />\r\n            {\"created_at: \" + this.state.created_at}<br />\r\n            {\"updated_at: \" + this.state.updated_at}<br />\r\n          </p>\r\n        </div>\r\n\r\n    }\r\n\r\n    return (\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">\r\n            <form className=\"input-group mb-3\">\r\n              <input className=\"form-control\" ref='companyname' type='text' placeholder='companyname'></input>\r\n              <div className=\"input-group-append\">\r\n                <button className=\"btn btn-outline-secondary\" onClick={e => this.handleSubmit(e)} >Search</button>\r\n              </div>\r\n            </form>\r\n            <p>{company}</p>\r\n          </div>\r\n          <div className=\"col-10\">\r\n            <OrganisationList />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default Organisations;","import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nclass UserCard extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n\r\n    this.state = {\r\n      show: false,\r\n    };\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      <div className=\"col-md-3\">\r\n        <div className=\"card\" onClick={this.handleShow}>\r\n          <p className=\"name\">{this.props.name}</p>\r\n          <div className=\"divImage\">\r\n            <img className=\"image_organisation\" alt=\"imageUser\" src={this.props.url}></img>\r\n          </div>\r\n        </div>\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{this.props.name}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <img className=\"image_organisation\" alt=\"imageUser\"src={this.props.url}></img>\r\n            <p>{this.props.followers}</p>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default UserCard;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport UserCard from \"./UserCard\";\r\n\r\nclass UserList extends Component {\r\n\r\n    state = {\r\n        url: `https://api.github.com/users?page=1&per_page=140`,\r\n        avatar_url: null,\r\n        id: null,\r\n\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get(this.state.url);\r\n        this.setState({\r\n            users: res.data,\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.users ? (\r\n                    <div className=\"row\">\r\n                        {this.state.users.map(users => \r\n                            (\r\n                            <UserCard\r\n                                key={users.id}\r\n                                name={users.login}\r\n                                url={users.avatar_url}\r\n                            />\r\n                            )\r\n                        )}\r\n                    </div>\r\n                ) : (\r\n                        <h1>Loading ...</h1>\r\n                    )\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default UserList;\r\n","import React, { Component } from \"react\";\r\nimport UserList from \"./UserList\";\r\nclass Users extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: null,\r\n      id: null,\r\n      url: null,\r\n      avatar_url: null,\r\n      followers: null,\r\n      following: null,\r\n      created_at: null,\r\n      updated_at: null\r\n    }\r\n  }\r\n  getUser(username) {\r\n    return fetch(`https://api.github.com/users/${username}`)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        console.log(response);\r\n        return response;\r\n      })\r\n  }\r\n\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n    let user = await this.getUser(this.refs.username.value);\r\n    this.setState({\r\n      username: user.login,\r\n      id: user.id,\r\n      url: user.url,\r\n      avatar_url: user.avatar_url,\r\n      followers: user.followers,\r\n      following: user.following,\r\n      created_at: user.created_at,\r\n      updated_at: user.updated_at\r\n\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let user;\r\n    if (this.state.username) {\r\n      user =\r\n        <div>\r\n          <img alt=\"avatar\" src={this.state.avatar_url} width='200px' />\r\n          <p>\r\n            {\"username: \" + this.state.username} <br />\r\n            {\"id: \" + this.state.id}<br />\r\n            {\"followers: \" + this.state.followers}<br />\r\n            {\"following: \" + this.state.following}<br />\r\n            {\"created_at: \" + this.state.created_at}<br />\r\n            {\"updated_at: \" + this.state.updated_at}<br />\r\n          </p>\r\n\r\n        </div>\r\n    };\r\n\r\n    return (\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">\r\n            <form className=\"input-group mb-3\">\r\n              <input className=\"form-control\" ref='username' type='text' placeholder='username'></input>\r\n              <div className=\"input-group-append\">\r\n                <button className=\"btn btn-outline-secondary\" onClick={e => this.handleSubmit(e)} >Search</button>\r\n              </div>\r\n            </form>\r\n            <p>{user}</p>\r\n          </div>\r\n          <div className=\"col-10\">\r\n\r\n            <UserList />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default Users;","import React, { Component } from \"react\";\r\n\r\nclass Error extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Error: Path does not exist !!!</p>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default Error;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nclass Navigation extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-md navbar-dark bg-dark \">\r\n                <NavLink className=\"navbar-brand .col-xs-6 .col-sm-4\" to=\"/\">Home</NavLink>\r\n                <NavLink className=\"navbar-brand .col-xs-6 .col-sm-4\" to=\"/organisations/\">Organisations</NavLink>\r\n                <NavLink className=\"navbar-brand .col-xs-6 .col-sm-4\" to=\"/users\">Users</NavLink>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport './App.css';\nimport Home from \"./components/layout/Home\";\nimport Organisations from \"./components/organisation/Organisations\";\nimport Users from \"./components/users/Users\";\nimport Error from \"./components/layout/Error\";\nimport Navigation from \"./components/layout/Navigation\";\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <BrowserRouter>\n        <Navigation />\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/organisations\" component={Organisations} exact />\n          <Route path=\"/users\" component={Users} />\n          <Route component={Error} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n\n}\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}